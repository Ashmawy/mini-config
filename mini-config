#!/usr/bin/python

import subprocess
import os
import yaml

CONFIG_DIR = './config'
FILES_DIR = '/files'
PACKAGES_DIR = '/packages'


def update_packages():
	subprocess.call('sudo apt-get update', shell=True)

def install_packages(install_file):
	if file_is_empty(install_file):
		return

	packages = open(install_file).readlines()

	for package in packages:
		try:
			subprocess.call('sudo apt-get install {}'.format(package), shell=True)
		except Exception as e:
			sys.exit('Failed to install {}: {}'.format(package, e))


def uninstall_packages(uninstall_file):
	if file_is_empty(uninstall_file):
		return

	packages = open(uninstall_file).readlines()

	for package in packages:
		try:
			subprocess.call('sudo apt-get remove {} && sudo apt-get autoremove && sudo apt-get clean'.format(package), shell=True)
		except Exception as e:
			sys.exit('Failed to uninstall {}: {}'.format(package, e))


def copy_file_content(file_name, destination, permissions, group, user):
	print file_name, destination, permissions, group, user

def set_config(config_yaml):
	with open(config_yaml, 'r') as stream:
	    try:
	        config = yaml.safe_load(stream)
	    except yaml.YAMLError as e:
	        sys.exit('Failed to load {}, this might be a malformed yaml file: {}'.format(config_yaml, e))


	for k,v in config.iteritems():
		if k != 'file':
			print 'mini-config is unable to handle config of type {}. Skipping.'.format(k)
			continue

		copy_file_content(v['name'], v['destination'], v['permissions'], v['group'], v['user'])









def file_is_empty(file):
	return os.stat("file").st_size == 0

def main():

	#update_packages()

	for file in [f for f in os.listdir(CONFIG_DIR) if os.path.isfile(os.path.join(CONFIG_DIR, f))]:
		set_config('{}/{}'.format(CONFIG_DIR, file))


if __name__ == '__main__':
	main()